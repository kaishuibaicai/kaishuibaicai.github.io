---
layout:     post
title:      软件测试的学习笔记
subtitle:   Software test-learning
date:       2017-08-23 18:34:00
author:     "Ksbc"
header-img: "img/20170823/test.jpg"
tags:
    - 测试
---

>  软件测试的学习笔记

### 《软件测试的艺术》

**所谓软件测试**，就是一个过程或一系列过程，用来确认计算机代码完成了其应该完成的功能，不执行其不该有的操作。软件应该是可预测且稳定的，不会给用户带来意外的惊奇。测试程序不是为了证明软件问题，而是为了找出软件的问题。**测试是为了发现错误而执行程序的过程。**本着证明程序存在错误，比证明程序没有错误更能发现问题。将软件测试定义为发现程序错误的过程，使得测试是个可以完成的任务。并且，**软件测试是不可能发现程序‘所有’的错误。**



#### 黑盒测试

是一种以数据驱动的测试或输入\输出驱动的测试。将程序视为一个黑盒子，测试目标与程序的内部机制和结构完全无关，而将重点集中放在程序不按其规范正确运行的环境条件。因此测试数据完全源于**软件规范**，这样就需要进行**穷举输入测试**，将所有可能的输入条件作为测试用例。

**但是**，穷举输入测试是无法实现的，测试人的目标在于通过有限的测试用例，最大限度地提高发现问题的数量，已取得最好的测试效果。因此，除了其他因素之外，要实现这个目标，还需要能够窥见软件的内部，对程序作合理但非无懈可击的假设。



#### 白盒测试

称为**逻辑驱动测试**，允许我们对程序的内部进行逻辑结构检查，从中获取测试数据。

其中，有一种方法，是根据程序的内部逻辑，穷举路径测试。但是这种不同逻辑路径的组合数量巨大，就和穷举输入测试法有些类似。并且即便穷举路径测试没有问题，也不能保证程序没有错误。

**总之**，尽管穷举输入测试要强于穷举路径测试，但两者都不是有效的方法，因为这两种方法都不可行。也许存在别的方法，将黑盒测试和白盒测试的要素结合起来，形成一个合理但并不完美的测试策略。这是接下来要学习的内容。

